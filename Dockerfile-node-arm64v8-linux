ARG BUILD_WORKDIR=/go/src/github.com/midonet/midonet-kubernetes

FROM golang:1.11.0 as builder-deps
ARG BUILD_WORKDIR
WORKDIR ${BUILD_WORKDIR}
COPY Gopkg.toml ./Gopkg.toml
COPY Gopkg.lock ./Gopkg.lock
ENV GO111MODULE=on
RUN go mod init
RUN go mod download
RUN go get github.com/tebeka/go2xunit

FROM builder-deps as builder
COPY cmd ./cmd
COPY pkg ./pkg
RUN CGO_ENABLED=0 GOARCH=arm64 GOOS=linux go build -ldflags '-s -w' -o dist/arm64-linux/midonet-kube-node ./cmd/midonet-kube-node
RUN CGO_ENABLED=0 GOARCH=arm64 GOOS=linux go build -ldflags '-s -w' -o dist/arm64-linux/midonet-kube-cni ./cmd/midonet-kube-cni
RUN CGO_ENABLED=0 GOARCH=arm64 GOOS=linux go build -ldflags '-s -w' -o dist/arm64-linux/midonet-kube-controllers ./cmd/midonet-kube-controllers
RUN CGO_ENABLED=0 GOARCG=arm64 GOOS=linux go test -v `find . -name "*_test.go" | xargs dirname | sort -u | xargs` | tee go_test.output
RUN go2xunit -input go_test.output -output /tmp/junit.xml

FROM builder as test_fail_checker
RUN go2xunit -fail -input go_test.output

FROM arm64v8/alpine:3.8
LABEL maintainer "YAMAMOTO Takashi <yamamoto@midokura.com>"
ARG BUILD_WORKDIR
WORKDIR /root/
COPY node-scripts .
COPY --from=builder ${BUILD_WORKDIR}/dist/arm64-linux/midonet-kube-node .
COPY --from=builder ${BUILD_WORKDIR}/dist/arm64-linux/midonet-kube-cni .
CMD ["./main"]
